1. Terminal 
docker run node		silent Mode
docker run -it node		Interactive Mode (Make a session between the container and our machine)

List all images
2. docker images 

show all running containers
3. docker ps -a

Stop Container
4. docker stop Conatiner_ID

Start Conatiner after Stoping
5. docker start -a <=== find the conatiner name from the List
docker start container_name

Assign Name to the container
6. docker run -p 3000:80 -d --rm --name smoldragon e136b00ac809
-p => mapping local port: conatiner port
--rm => remove the conatiner after it's stops
--name => assign name
e136b00ac809 => image name
**  the conatiner name must be lowercase.

Remove container
7. docker rm container_name

Remove Images
8. docker rmi imagehash

Start Image in Deattach mode and map it to port and then remove the container automatically when it stops
9. docker run -p 3000:80 -d --rm hash

Figure out the image information and it's layers
10. docker inspect IMAGE_ID

Copy a file from local machine to Docker container
11. After running a container, find the name using 'docker ps -a'
docker cp dummy/. containerName:/test
dummy/. => everything inside this folder
/test => directory inside the container

Assign name to Image "must be done in the build process"
12. docker build -t smoldragon:latest .
. <= current location where Dockerfile is located

Run container based on Tagged image
13. docker run -p 3000:80 -d --rm --name consmoldragon smoldragon:latest

Remove all unused images 
14. docker image prune -a

Create a Tag to an Image (has to be done in Build process)
15. docker build -t node-demo-app:latest .  

Sharing/Pushing Image to Private/Public registry we need to Rename the local Image to match the repo name
https://hub.docker.com/repository/docker/mohamedsaleh1984/node-demo-app
16.  docker tag node-demo-app:latest mohamedsaleh1984/node-demo-app






