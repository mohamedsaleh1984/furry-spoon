1. Terminal 
docker run node		silent Mode
docker run -it node		Interactive Mode (Make a session between the container and our machine)

List all images
2. docker images 

show all running containers
3. docker ps -a

Stop Container
4. docker stop Conatiner_ID

Start Conatiner after Stoping
5. docker start -a <=== find the conatiner name from the List
docker start container_name

Assign Name to the container
6. docker run -p 3000:80 -d --rm --name smoldragon e136b00ac809
-p => mapping local port: conatiner port
--rm => remove the conatiner after it's stops
--name => assign name
e136b00ac809 => image name
**  the conatiner name must be lowercase.

Remove container
7. docker rm container_name

Remove Images
8. docker rmi imagehash

Start Image in Deattach mode and map it to port and then remove the container automatically when it stops
9. docker run -p 3000:80 -d --rm hash

Figure out the image information and it's layers
10. docker inspect IMAGE_ID

Copy a file from local machine to Docker container
11. After running a container, find the name using 'docker ps -a'
docker cp dummy/. containerName:/test
dummy/. => everything inside this folder
/test => directory inside the container

Assign name to Image "must be done in the build process"
12. docker build -t smoldragon:latest .
. <= current location where Dockerfile is located

Run container based on Tagged image
13. docker run -p 3000:80 -d --rm --name consmoldragon smoldragon:latest

Remove all unused images 
14. docker image prune -a

Create a Tag to an Image (has to be done in Build process)
15. docker build -t node-demo-app:latest .  

Sharing/Pushing Image to Private/Public registry we need to Rename the local Image to match the repo name
https://hub.docker.com/repository/docker/mohamedsaleh1984/node-demo-app
16.  docker tag node-demo-app:latest mohamedsaleh1984/node-demo-app

** When we rename an Image we don't get rid of the old one (it's just a clone)

Push image to repo
17. docker push mohamedsaleh1984/node-demo-app

In case access was denied to push an image, we need to login to docker hub account LOCALLY using
18. docker login

to Logout
19: docker logout

pull docker image from repo
20: docker pull mohamedsaleh1984/node-demo-app
to run the image we need to give the full name
docker run -p 3000:3000 --rm mohamedsaleh1984/node-demo-app

We can automatically Pull and Run docker image if We don't have it locally.
21: docker run mohamedsaleh1984/node-demo-app

Build Image and Run container with Image Tags and container name
22: 
docker build -t feeback-node .										<= 	Build an image from Dockerfile in current directory
docker run -p 3000:80 -d --name feedback-app --rm feeback-node			<=	Run container


Copy a file from Docker container to local machine
23. After running a container, find the name using 'docker ps -a'
docker cp feedback-app:/app/feedback ./FilesFromContainer
NOTE: you need to specify the fully qualified name for the directory


Volumes Section
-------------------
Named volumes: Managed and controlled by US, get generated while we BUILD the image
Anonymous volumes: Managed and controlled by Docker, get generated automatically, get removed automatically WHEN the conatiner Stops

--To add anonymous volumes, add below line
VOLUME [ "/app/feedback" ]				<= assign container path to be Mapped to LOCAL 
--To show current volumes
docker volume ls
--To remove unused volumes
docker volume prune
-- To view all commands for volumes 
docker volume --help


Save Persisteant Data through VOLUME mouting/mapping a drive, folder from Local Machine to Container
24. VOLUME [ "/app/feedback" ]			<= inside Dockerfile


Map conatiner path to NAMED volumn
25. docker run -d -p 3000:80 --rm --name feedback-app -v feedback:/app/feedback feedback:latest
feedback:/app/feedback		Name:Path inside the conatiner


